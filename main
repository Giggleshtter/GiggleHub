local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Giggle Hub (free)",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Successfully Loading Your Script",
   LoadingSubtitle = "SUPPORTS MOBILE AND PC!!",
   Theme = "Ocean",

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },

   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", 
      SaveKey = true,
      GrabKeyFromSite = false, 
      Key = {"Hello"}
   }
})

local Tab = Window:CreateTab("Player", 4483362458)

local Section = Tab:CreateSection("to change the walkspeed and JumpHeight, drag the slider(s) below!")

local Slider = Tab:CreateSlider({
   Name = "WALKSPEED",
   Range = {16, 1000},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1",
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
   end,
})

local Slider = Tab:CreateSlider({
   Name = "JUMPHEIGHT",
   Range = {50, 1000},
   Increment = 1,
   Suffix = "Height",
   CurrentValue = 50,
   Flag = "Slider2",
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
   end,
})

local Button = Tab:CreateButton({
   Name = "INFINITE JUMP (infinite jump is Mobile Supported now!!)",
   Callback = function()
   game.StarterGui:SetCore("SendNotification", {
    Title = "GiggleHub Says;";
    Text = "- Infinite Jump executed! Spam the space button as much as you want.";
    Icon = "nil;",
    Duration = 5;
})
 
_G.infinjump = true
 
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
Mouse.KeyDown:connect(function(k)
if _G.infinjump then
if k:byte() == 32 then
Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
Humanoid:ChangeState("Jumping")
wait(0.1)
Humanoid:ChangeState("Seated")
end
end
end)
 
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
Mouse.KeyDown:connect(function(k)
k = k:lower()
if k == "f" then
if _G.infinjump == true then
_G.infinjump = false
else
_G.infinjump = true
end
end
end)
   end,
})

local Button = Tab:CreateButton({
   Name = "NOCLIP (Press N to toggle)",
   Callback = function()
   local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local lp = game.Players.LocalPlayer
local c = true

uis.InputBegan:Connect(function(i,g)
	if g then return end
	if i.KeyCode == Enum.KeyCode.N then
		c = not c
	end
end)

local function nc(chr)
	rs.Stepped:Connect(function()
		if c then
			for _,v in pairs(chr:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		end
	end)
end

if lp.Character then
	nc(lp.Character)
end

lp.CharacterAdded:Connect(nc)

   end,
})

local Button = Tab:CreateButton({
   Name = "FLY (Press H to toggle)",
   Callback = function()
local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local p = game.Players.LocalPlayer
local c = true
local flying = false
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local last = {f = 0, b = 0, l = 0, r = 0}
local spd = 0
local max = 50
local con

local function fly()
	if flying then return end
	flying = true
	local hrp = p.Character:WaitForChild("HumanoidRootPart")
	local hum = p.Character:WaitForChild("Humanoid")
	local bg = Instance.new("BodyGyro", hrp)
	local bv = Instance.new("BodyVelocity", hrp)
	bg.P = 9e4
	bg.maxTorque = Vector3.new(9e9,9e9,9e9)
	bg.cframe = hrp.CFrame
	bv.velocity = Vector3.new(0,0.1,0)
	bv.maxForce = Vector3.new(9e9,9e9,9e9)

	con = rs.RenderStepped:Connect(function()
		hum.PlatformStand = true
		if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
			spd += .5 + (spd / max)
			if spd > max then spd = max end
		elseif spd > 0 then
			spd -= 1
			if spd < 0 then spd = 0 end
		end
		local cf = workspace.CurrentCamera.CFrame
		if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
			bv.velocity = ((cf.lookVector * (ctrl.f + ctrl.b)) + ((cf * CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b)*.2, 0)).p - cf.p)) * spd
			last = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
		else
			bv.velocity = ((cf.lookVector * (last.f + last.b)) + ((cf * CFrame.new(last.l + last.r, (last.f + last.b)*.2, 0)).p - cf.p)) * spd
		end
		bg.cframe = cf * CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * spd / max), 0, 0)
	end)
end

local function stop()
	flying = false
	spd = 0
	ctrl = {f = 0, b = 0, l = 0, r = 0}
	last = {f = 0, b = 0, l = 0, r = 0}
	if p.Character and p.Character:FindFirstChild("Humanoid") then
		p.Character.Humanoid.PlatformStand = false
	end
	for _,v in pairs(p.Character:GetDescendants()) do
		if v:IsA("BodyVelocity") or v:IsA("BodyGyro") then v:Destroy() end
	end
	if con then con:Disconnect() end
end

uis.InputBegan:Connect(function(i,g)
	if g then return end
	if i.KeyCode == Enum.KeyCode.H then
		c = not c
		if c then fly() else stop() end
	elseif i.KeyCode == Enum.KeyCode.W then ctrl.f = 1
	elseif i.KeyCode == Enum.KeyCode.S then ctrl.b = -1
	elseif i.KeyCode == Enum.KeyCode.A then ctrl.l = -1
	elseif i.KeyCode == Enum.KeyCode.D then ctrl.r = 1
	end
end)

uis.InputEnded:Connect(function(i)
	if i.KeyCode == Enum.KeyCode.W then ctrl.f = 0
	elseif i.KeyCode == Enum.KeyCode.S then ctrl.b = 0
	elseif i.KeyCode == Enum.KeyCode.A then ctrl.l = 0
	elseif i.KeyCode == Enum.KeyCode.D then ctrl.r = 0
	end
end)

if p.Character then fly() end
p.CharacterAdded:Connect(function()
	repeat wait() until p.Character:FindFirstChild("HumanoidRootPart") and p.Character:FindFirstChild("Humanoid")
	if c then fly() end
end)

   end,
})
